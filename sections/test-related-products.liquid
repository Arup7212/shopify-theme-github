<style>
  .product-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 20px;
    padding: 20px;
  }

  .related_product {
    border: 1px solid #e0e0e0;
    padding: 15px;
    background-color: #fff;
    border-radius: 10px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease-in-out;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .related_product img {
    width: 100%;
    height: 200px; /* Adjust the height as needed */
    object-fit: cover;
    border-radius: 5px;
    margin-bottom: 10px;
  }

  .related_product h2 {
    font-size: 18px;
    margin: 10px 0;
    color: #333;
  }

  .related_product p {
    font-size: 14px;
    color: #666;
  }

  .related_product a {
    display: inline-block;
    margin-top: 10px;
    padding: 10px 15px;
    background-color: #007bff;
    color: #fff;
    text-decoration: none;
    border-radius: 5px;
    transition: background-color 0.2s ease-in-out;
  }

  .related_product a:hover {
    background-color: #0056b3;
  }

  .related_product:hover {
    transform: translateY(-5px);
  }
</style>

<div>
  <h2>{{ section.settings.heading }}</h2>
  <div id="external-product-list" class="product-grid"></div>
  <div id="loading-indicator" style="text-align: center; padding: 20px; display: none;">Loading more products...</div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    var apiUrl = 'https://fakestoreapi.com/products';
    var productsPerPage = 8;
    var currentPage = 1;
    var totalProducts = 0;
    var products = [];
    var isLoading = false;
    var allProductsLoaded = false; // Flag to indicate if all products are loaded

    // Fetch data from external API using XMLHttpRequest
    function fetchData() {
      if (isLoading || allProductsLoaded) return;
      isLoading = true;
      document.getElementById('loading-indicator').style.display = 'block'; // Show loading indicator

      var xhr = new XMLHttpRequest();
      xhr.open('GET', apiUrl, true);
      xhr.onload = function() {
        if (xhr.status >= 200 && xhr.status < 300) {
          var data = JSON.parse(xhr.responseText);
          console.log('Fetched data:', data);

          // Access the products array
          if (data.length === 0) {
            allProductsLoaded = true;
          } else {
            products = data;
            totalProducts = products.length;

            // Display the initial set of products
            displayProducts();
          }

          // Set loading flag to false and hide loading indicator
          isLoading = false;
          document.getElementById('loading-indicator').style.display = 'none';
        } else {
          console.error('Request failed. Returned status of ' + xhr.status);
          isLoading = false;
          document.getElementById('loading-indicator').style.display = 'none';
        }
      };
      xhr.onerror = function() {
        console.error('Error fetching product data.');
        isLoading = false;
        document.getElementById('loading-indicator').style.display = 'none';
      };
      xhr.send();
    }

    function displayProducts() {
      var productListHTML = '';
      var start = (currentPage - 1) * productsPerPage;
      var end = start + productsPerPage;
      var paginatedProducts = products.slice(start, end);

      paginatedProducts.forEach(function(product) {
        productListHTML += `
          <div class="related_product">
            <h2>${product.title}</h2>
            <img src="${product.image}" alt="${product.title}">
            <p>Price: $${product.price}</p>
            <p>Rating: ${product.rating.rate} (based on ${product.rating.count} reviews)</p>
            <a href="/products/${product.id}">View Product</a>
          </div>
        `;
      });

      document.getElementById('external-product-list').innerHTML += productListHTML; // Append new products
    }

    function checkScroll() {
      // Check if scrolled to bottom
      if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 100) {
        if ((currentPage * productsPerPage) < totalProducts && !isLoading) {
          currentPage++;
          fetchData(); // Fetch next set of products
        }
      }
    }

    // Initial fetch
    fetchData();

    // Add scroll event listener
    window.addEventListener('scroll', checkScroll);
  });
</script>


{% comment %}
<style>
  .product-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 20px;
    padding: 20px;
  }

  .related_product {
    border: 1px solid #e0e0e0;
    padding: 15px;
    background-color: #fff;
    border-radius: 10px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease-in-out;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .related_product img {
    width: 100%;
    height: 200px; /* Adjust the height as needed */
    object-fit: cover;
    border-radius: 5px;
    margin-bottom: 10px;
  }

  .related_product h2 {
    font-size: 18px;
    margin: 10px 0;
    color: #333;
  }

  .related_product p {
    font-size: 14px;
    color: #666;
  }

  .related_product a {
    display: inline-block;
    margin-top: 10px;
    padding: 10px 15px;
    background-color: #007bff;
    color: #fff;
    text-decoration: none;
    border-radius: 5px;
    transition: background-color 0.2s ease-in-out;
  }

  .related_product a:hover {
    background-color: #0056b3;
  }

  .related_product:hover {
    transform: translateY(-5px);
  }
</style>

<div>
  <h2>{{ section.settings.heading }}</h2>
  <div id="external-product-list" class="product-grid"></div>
  <div id="loading-indicator" style="text-align: center; padding: 20px; display: none;">Loading more products...</div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    var apiUrl = 'https://fakestoreapi.com/products';
    var productsPerPage = 8;
    var currentPage = 1;
    var totalProducts = 0;
    var products = [];
    var isLoading = false;
    var allProductsLoaded = false; // Flag to indicate if all products are loaded

    // Fetch data from external API
    function fetchData() {
      if (isLoading || allProductsLoaded) return;
      isLoading = true;
      document.getElementById('loading-indicator').style.display = 'block'; // Show loading indicator

      fetch(apiUrl)
        .then(response => response.json())
        .then(data => {
          console.log('Fetched data:', data);

          // Access the products array
          if (data.length === 0) {
            allProductsLoaded = true;
          } else {
            products = data;
            totalProducts = products.length;

            // Display the initial set of products
            displayProducts();
          }

          // Set loading flag to false and hide loading indicator
          isLoading = false;
          document.getElementById('loading-indicator').style.display = 'none';
        })
        .catch(error => {
          console.error('Error fetching product data:', error);
          isLoading = false;
          document.getElementById('loading-indicator').style.display = 'none';
        });
    }

    function displayProducts() {
      var productListHTML = '';
      var start = (currentPage - 1) * productsPerPage;
      var end = start + productsPerPage;
      var paginatedProducts = products.slice(start, end);

      paginatedProducts.forEach(function(product) {
        productListHTML += `
          <div class="related_product">
            <h2>${product.title}</h2>
            <img src="${product.image}" alt="${product.title}">
            <p>Price: $${product.price}</p>
            <p>Rating: ${product.rating.rate} (based on ${product.rating.count} reviews)</p>
            <a href="/products/${product.id}">View Product</a>
          </div>
        `;
      });

      document.getElementById('external-product-list').innerHTML += productListHTML; // Append new products
    }

    function checkScroll() {
      // Check if scrolled to bottom
      if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 100) {
        if ((currentPage * productsPerPage) < totalProducts && !isLoading) {
          currentPage++;
          fetchData(); // Fetch next set of products
        }
      }
    }

    // Initial fetch
    fetchData();

    // Add scroll event listener
    window.addEventListener('scroll', checkScroll);
  });
</script>
{% endcomment %}


{% schema %}
{
  "name": "Test Related Products",
  "settings": [
    {
    "type": "text",
    "id": "heading",
    "label": "Section name",
    "default": "Related Products"
    }
  ],
  "presets": [
  {
    "name": "Test Related Products"
  }
]
}
{% endschema %}
