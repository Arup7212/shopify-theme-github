{% doc %}
  @prompt
    Create a scrollable collection grid section that displays 8 collections with the following specifications:
    - Each collection shows its featured image at 347x433.75px dimensions
    - On hover, display the collection name as an overlay
    - Clicking opens the respective collection page
    - Grid should be horizontally scrollable
    - Automatically inherit global theme fonts, colors, and background styles
    - Responsive design that works on all devices
    - Smooth hover transitions for collection names
    - Clean, modern aesthetic matching the jewelry store theme
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-collection-grid-{{ ai_gen_id }} {
    width: 100%;
    overflow: hidden;
    padding: {{ block.settings.section_padding_top }}px 0 {{ block.settings.section_padding_bottom }}px;
  }

  .ai-collection-grid-container-{{ ai_gen_id }} {
    display: flex;
    gap: {{ block.settings.grid_gap }}px;
    overflow-x: auto;
    scroll-behavior: smooth;
    padding: 0 {{ block.settings.horizontal_padding }}px;
    scrollbar-width: none;
    -ms-overflow-style: none;
  }

  .ai-collection-grid-container-{{ ai_gen_id }}::-webkit-scrollbar {
    display: none;
  }

  .ai-collection-item-{{ ai_gen_id }} {
    flex: 0 0 {{ block.settings.collection_width }}px;
    position: relative;
    cursor: pointer;
    border-radius: {{ block.settings.border_radius }}px;
    overflow: hidden;
    transition: transform 0.3s ease;
  }

  .ai-collection-item-{{ ai_gen_id }}:hover {
    transform: translateY(-{{ block.settings.hover_lift }}px);
  }

  .ai-collection-image-{{ ai_gen_id }} {
    width: 100%;
    height: {{ block.settings.image_height }}px;
    object-fit: cover;
    display: block;
    transition: transform 0.3s ease;
  }

  .ai-collection-item-{{ ai_gen_id }}:hover .ai-collection-image-{{ ai_gen_id }} {
    transform: scale({{ block.settings.image_scale }});
  }

  .ai-collection-overlay-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, {{ block.settings.overlay_opacity }}) 100%
    );
    display: flex;
    align-items: flex-end;
    padding: 20px;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .ai-collection-item-{{ ai_gen_id }}:hover .ai-collection-overlay-{{ ai_gen_id }} {
    opacity: 1;
  }

  .ai-collection-name-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
    font-family: {{ settings.type_heading_font.family }}, {{ settings.type_heading_font.fallback_families }};
    font-weight: {{ settings.type_heading_font.weight }};
    font-size: {{ block.settings.text_size }}px;
    line-height: 1.2;
    margin: 0;
    text-transform: {{ block.settings.text_transform }};
    letter-spacing: {{ block.settings.letter_spacing }}px;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
  }

  .ai-collection-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: {{ block.settings.image_height }}px;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .ai-collection-placeholder-{{ ai_gen_id }} svg {
    width: 60px;
    height: 60px;
    opacity: 0.3;
  }

  .ai-collection-empty-state-{{ ai_gen_id }} {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 12px;
    color: #666;
    text-align: center;
    pointer-events: none;
  }

  @media screen and (max-width: 749px) {
    .ai-collection-item-{{ ai_gen_id }} {
      flex: 0 0 {{ block.settings.collection_width | times: 0.8 }}px;
    }

    .ai-collection-grid-container-{{ ai_gen_id }} {
      padding: 0 {{ block.settings.horizontal_padding | times: 0.5 }}px;
      gap: {{ block.settings.grid_gap | times: 0.8 }}px;
    }

    .ai-collection-name-{{ ai_gen_id }} {
      font-size: {{ block.settings.text_size | times: 0.9 }}px;
    }

    .ai-collection-overlay-{{ ai_gen_id }} {
      padding: 15px;
    }
  }

  @media screen and (max-width: 480px) {
    .ai-collection-item-{{ ai_gen_id }} {
      flex: 0 0 {{ block.settings.collection_width | times: 0.7 }}px;
    }

    .ai-collection-image-{{ ai_gen_id }},
    .ai-collection-placeholder-{{ ai_gen_id }} {
      height: {{ block.settings.image_height | times: 0.8 }}px;
    }
  }
{% endstyle %}

<collection-grid-{{ ai_gen_id }}
  class="ai-collection-grid-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-collection-grid-container-{{ ai_gen_id }}">
    {% for i in (1..8) %}
      {% liquid
        assign collection_key = 'collection_' | append: i
        assign collection = block.settings[collection_key]
      %}

      {% if collection != blank %}
        <a
          href="{{ collection.url }}"
          class="ai-collection-item-{{ ai_gen_id }}"
          aria-label="View {{ collection.title }} collection"
        >
          {% if collection.featured_image %}
            <img
              src="{{ collection.featured_image | image_url: width: 694 }}"
              alt="{{ collection.featured_image.alt | default: collection.title | escape }}"
              width="347"
              height="{{ block.settings.image_height }}"
              loading="lazy"
              class="ai-collection-image-{{ ai_gen_id }}"
            >
          {% else %}
            <div class="ai-collection-placeholder-{{ ai_gen_id }}">
              {{ 'collection-1' | placeholder_svg_tag }}
            </div>
          {% endif %}

          <div class="ai-collection-overlay-{{ ai_gen_id }}">
            <h3 class="ai-collection-name-{{ ai_gen_id }}">
              {{ collection.title }}
            </h3>
          </div>
        </a>
      {% else %}
        <div class="ai-collection-item-{{ ai_gen_id }}">
          <div class="ai-collection-placeholder-{{ ai_gen_id }}">
            {{ 'collection-1' | placeholder_svg_tag }}
            <div class="ai-collection-empty-state-{{ ai_gen_id }}">
              Add collection {{ i }}
            </div>
          </div>
        </div>
      {% endif %}
    {% endfor %}
  </div>
</collection-grid-{{ ai_gen_id }}>

<script>
  (function() {
    class CollectionGrid{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
      }

      connectedCallback() {
        this.container = this.querySelector('.ai-collection-grid-container-{{ ai_gen_id }}');
        this.setupTouchScroll();
      }

      setupTouchScroll() {
        if (!this.container) return;

        let isDown = false;
        let startX;
        let scrollLeft;

        this.container.addEventListener('mousedown', (e) => {
          isDown = true;
          this.container.style.cursor = 'grabbing';
          startX = e.pageX - this.container.offsetLeft;
          scrollLeft = this.container.scrollLeft;
        });

        this.container.addEventListener('mouseleave', () => {
          isDown = false;
          this.container.style.cursor = 'grab';
        });

        this.container.addEventListener('mouseup', () => {
          isDown = false;
          this.container.style.cursor = 'grab';
        });

        this.container.addEventListener('mousemove', (e) => {
          if (!isDown) return;
          e.preventDefault();
          const x = e.pageX - this.container.offsetLeft;
          const walk = (x - startX) * 2;
          this.container.scrollLeft = scrollLeft - walk;
        });

        this.container.style.cursor = 'grab';
      }
    }

    customElements.define('collection-grid-{{ ai_gen_id }}', CollectionGrid{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Collection grid",
  "settings": [
    {
      "type": "header",
      "content": "Collections"
    },
    {
      "type": "collection",
      "id": "collection_1",
      "label": "Collection 1"
    },
    {
      "type": "collection",
      "id": "collection_2",
      "label": "Collection 2"
    },
    {
      "type": "collection",
      "id": "collection_3",
      "label": "Collection 3"
    },
    {
      "type": "collection",
      "id": "collection_4",
      "label": "Collection 4"
    },
    {
      "type": "collection",
      "id": "collection_5",
      "label": "Collection 5"
    },
    {
      "type": "collection",
      "id": "collection_6",
      "label": "Collection 6"
    },
    {
      "type": "collection",
      "id": "collection_7",
      "label": "Collection 7"
    },
    {
      "type": "collection",
      "id": "collection_8",
      "label": "Collection 8"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "collection_width",
      "min": 200,
      "max": 400,
      "step": 10,
      "unit": "px",
      "label": "Collection width",
      "default": 350
    },
    {
      "type": "range",
      "id": "image_height",
      "min": 300,
      "max": 500,
      "step": 10,
      "unit": "px",
      "label": "Image height",
      "default": 430
    },
    {
      "type": "range",
      "id": "grid_gap",
      "min": 10,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Gap between items",
      "default": 20
    },
    {
      "type": "range",
      "id": "horizontal_padding",
      "min": 10,
      "max": 50,
      "step": 5,
      "unit": "px",
      "label": "Horizontal padding",
      "default": 20
    },
    {
      "type": "range",
      "id": "section_padding_top",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Top padding",
      "default": 40
    },
    {
      "type": "range",
      "id": "section_padding_bottom",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Bottom padding",
      "default": 40
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "hover_lift",
      "min": 0,
      "max": 10,
      "step": 1,
      "unit": "px",
      "label": "Hover lift effect",
      "default": 4
    },
    {
      "type": "range",
      "id": "image_scale",
      "min": 1.0,
      "max": 1.2,
      "step": 0.1,
      "label": "Image hover scale",
      "default": 1.1
    },
    {
      "type": "header",
      "content": "Overlay"
    },
    {
      "type": "range",
      "id": "overlay_opacity",
      "min": 0.3,
      "max": 0.8,
      "step": 0.1,
      "label": "Overlay opacity",
      "default": 0.6
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "text_size",
      "min": 14,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Text size",
      "default": 20
    },
    {
      "type": "select",
      "id": "text_transform",
      "label": "Text transform",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "uppercase",
          "label": "Uppercase"
        },
        {
          "value": "lowercase",
          "label": "Lowercase"
        },
        {
          "value": "capitalize",
          "label": "Capitalize"
        }
      ],
      "default": "uppercase"
    },
    {
      "type": "range",
      "id": "letter_spacing",
      "min": 0,
      "max": 3,
      "step": 0.5,
      "unit": "px",
      "label": "Letter spacing",
      "default": 1
    }
  ],
  "presets": [
    {
      "name": "Collection grid"
    }
  ]
}
{% endschema %}